generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Skill {
  id        String   @id @default(uuid())
  name      String
  icon      String
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("skills")
}

model Project {
  id          String   @id @default(uuid())
  title       String   @unique
  description String
  image       String
  techStack   String[]
  liveUrl     String
  githubUrl   String
  backGitUrl  String?
  level       String

  isTeam     Boolean   @default(false)
  teamSize   Int?
  roleInTeam String?
  startDate  DateTime?
  endDate    DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("projects")
}

model Blog {
  id          String   @id @default(uuid())
  title       String   @unique
  contentHtml String
  contentJson Json
  slug        String?  @unique
  tags        String[]
  isDeleted   Boolean  @default(false)
  publishedAt DateTime @default(now())
  isPublished Boolean  @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("blogs")
}

model Experience {
  id          String    @id @default(uuid())
  company     String
  position    String
  startDate   DateTime
  endDate     DateTime?
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("experiences")
}

model Education {
  id          String    @id @default(uuid())
  institution String
  degree      String    @unique
  startDate   DateTime
  endDate     DateTime?
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("educations")
}

model Contact {
  id        String   @id @default(uuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}
